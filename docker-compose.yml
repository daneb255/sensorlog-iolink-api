version: '3'
services:
  reverse-proxy:
    image: traefik:v2.4
    # Enables the web UI and tells Traefik to listen to docker
    command: --api.insecure=true --providers.docker --accesslog=true
    ports:
      # The HTTP port
      - "80:80"
      # The Web UI (enabled by --api.insecure=true)
      - "8080:8080"
    volumes:
      # So that Traefik can listen to the Docker events
      - /var/run/docker.sock:/var/run/docker.sock:rw
  mongo:
    restart: always
    image: mongo:4.4.5-bionic
    volumes:
    - mongo-data:/data/db
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: admin
      MONGO_INITDB_DATABASE: sensordata
  postgres:
    restart: always
    image: postgres:12
    volumes:
    - postgres-data:/var/lib/postgresql/data
    environment:
      POSTGRES_PASSWORD: admin
      POSTGRES_USER: admin
      POSTGRES_DB: sensordata
  rabbitmq:
    restart: always
    image: rabbitmq:latest
    ports:
    - 5672:5672
    environment:
        - RABBITMQ_DEFAULT_VHOST=sensordata
        - RABBITMQ_DEFAULT_PASS=admin
        - RABBITMQ_DEFAULT_USER=admin
  grafana:
    restart: always
    image: grafana/grafana:latest
    environment:
      GF_SERVER_SERVE_FROM_SUB_PATH: "true"
      GF_SERVER_ROOT_URL: http://127.0.0.1/grafana
      GF_SERVER_DOMAIN: 127.0.0.1
    volumes:
    - grafana-data:/var/lib/grafana
    labels:
      - "traefik.http.routers.grafana.rule=Host(`grafana.traefik.localdomain`) || (Host(`127.0.0.1`) && PathPrefix(`/grafana`))"
      - "traefik.http.routers.grafana.middlewares=grafana-strippefix"
      - "traefik.http.middlewares.grafana-strippefix.stripprefix.prefixes=/grafana"
  telegraf:
    restart: always
    image: telegraf:latest
    environment:
      HOST_PROC: /rootfs/proc
      HOST_SYS: /rootfs/sys
      HOST_ETC: /rootfs/etc
    volumes:
     - ./telegraf.conf:/etc/telegraf/telegraf.conf:ro
     - /var/run/docker.sock:/var/run/docker.sock:ro
     - /sys:/rootfs/sys:ro
     - /proc:/rootfs/proc:ro
     - /etc:/rootfs/etc:ro
  influxdb:
    restart: always
    image: influxdb:1.8
    volumes:
    - influx-data:/var/lib/influxdb
    environment:
      INFLUXDB_DB: sensorlog
      INFLUXDB_ADMIN_USER: admin
      INFLUXDB_ADMIN_PASSWORD: admin
  sensorlog-api:
    restart: always
    image: 'dbitzer/sensorlog-api:nosql_uni_project-1.2.4'
    labels:
      - "traefik.enable=true"
      - "traefik.port=5000"
      - "traefik.http.routers.sensorlog-api.rule=Host(`sensorlog-api.traefik.localdomain`) || (Host(`127.0.0.1`) && PathPrefix(`/sensorlog-api`))"
      - "traefik.http.routers.sensorlog-api.middlewares=sensorlog-api-strippefix"
      - "traefik.http.middlewares.sensorlog-api-strippefix.stripprefix.prefixes=/sensorlog-api"
    environment:
      RABBITMQ_USER: admin
      RABBITMQ_PASSWORD: admin
      RABBITMQ_VHOST: sensordata
      RABBITMQ_HOST: rabbitmq
      FLASK_SECRET_KEY: asdfasdf123
  sensorlog-consumer:
    restart: always
    image: 'dbitzer/sensorlog-consumer:1.4.0'
    labels:
      - "traefik.enable=false"
    environment:
      RABBITMQ_USER: admin
      RABBITMQ_PASSWORD: admin
      RABBITMQ_VHOST: sensordata
      RABBITMQ_HOST: rabbitmq
      INFLUX_USER: admin
      INFLUX_PASSWORD: admin
      INFLUX_HOST: influxdb
      INFLUX_DB: sensorlog
      MONGODB_USER: admin
      MONGODB_PASSWORD: admin
      MONGODB_HOST: mongo
      MONGODB_DB: sensordata
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
      POSTGRES_HOST: postgres
      POSTGRES_DB: sensordata
  benchmark:
    restart: always
    image: dbitzer/apache-ab-benchmark:1.0
    labels:
      - "traefik.enable=false"
    tty: true

volumes:
  postgres-data:
  mongo-data:
  influx-data:
  grafana-data:
